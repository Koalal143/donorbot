from typing import Any

from aiogram.types import CallbackQuery, Message
from aiogram_dialog import Dialog, DialogManager, Window
from aiogram_dialog.widgets.input import ManagedTextInput, TextInput
from aiogram_dialog.widgets.kbd import Button, Group, Row, ScrollingGroup, Select
from aiogram_dialog.widgets.text import Const, Format
from dishka import FromDishka
from dishka.integrations.aiogram_dialog import inject

from src.dialogs.states import OrganizerSG
from src.dialogs.validators import validate_organizer_name
from src.models.organizer import Organizer
from src.repositories.organizer import OrganizerRepository


@inject
async def get_organizers_data(
    dialog_manager: DialogManager,
    organizer_repository: FromDishka[OrganizerRepository],
    **kwargs: Any,
) -> dict[str, Any]:
    organizers = await organizer_repository.get_all()

    return {
        "organizers": [(org.id, org.name) for org in organizers],
        "has_organizers": len(organizers) > 0,
        "total_count": len(organizers),
    }


@inject
async def get_organizer_menu_data(
    dialog_manager: DialogManager,
    organizer_repository: FromDishka[OrganizerRepository],
    **kwargs: Any,
) -> dict[str, Any]:
    selected_organizer_id = dialog_manager.dialog_data.get("selected_organizer_id")
    organizer_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä"

    if selected_organizer_id:
        organizer = await organizer_repository.get_by_id(selected_organizer_id)
        if organizer:
            organizer_name = organizer.name

    return {
        "organizer_name": organizer_name,
    }


async def organizer_selected(
    callback: CallbackQuery,
    widget: Select,
    dialog_manager: DialogManager,
    item_id: str,
) -> None:
    organizer_id = int(item_id)
    dialog_manager.dialog_data["selected_organizer_id"] = organizer_id

    await dialog_manager.switch_to(OrganizerSG.organizer_menu)


async def register_new_organizer(
    callback: CallbackQuery,
    button: Button,
    dialog_manager: DialogManager,
) -> None:
    await callback.answer("–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞...")
    await dialog_manager.switch_to(OrganizerSG.organizer_registration)


async def back_to_organizer_selection(
    callback: CallbackQuery,
    button: Button,
    dialog_manager: DialogManager,
) -> None:
    await dialog_manager.switch_to(OrganizerSG.organizer_selection)


async def events_management_handler(
    callback: CallbackQuery,
    button: Button,
    dialog_manager: DialogManager,
) -> None:
    await callback.answer("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")


async def content_management_handler(
    callback: CallbackQuery,
    button: Button,
    dialog_manager: DialogManager,
) -> None:
    await callback.answer("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")


async def donor_days_management_handler(
    callback: CallbackQuery,
    button: Button,
    dialog_manager: DialogManager,
) -> None:
    await callback.answer("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–Ω—è–º–∏ –¥–æ–Ω–æ—Ä–∞ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")


async def donor_data_management_handler(
    callback: CallbackQuery,
    button: Button,
    dialog_manager: DialogManager,
) -> None:
    await callback.answer("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –¥–æ–Ω–æ—Ä–æ–≤ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")


async def statistics_management_handler(
    callback: CallbackQuery,
    button: Button,
    dialog_manager: DialogManager,
) -> None:
    await callback.answer("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")


async def communication_management_handler(
    callback: CallbackQuery,
    button: Button,
    dialog_manager: DialogManager,
) -> None:
    await callback.answer("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è–º–∏ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")


@inject
async def organizer_name_input_handler(
    message: Message,
    widget: ManagedTextInput,
    dialog_manager: DialogManager,
    data: str,
    organizer_repository: FromDishka[OrganizerRepository],
) -> None:
    validation_result = validate_organizer_name(data)
    if not validation_result.is_valid:
        await message.answer(validation_result.error_message)
        return

    name = data.strip()
    existing_organizer = await organizer_repository.get_by_name(name)
    if existing_organizer:
        await message.answer("–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        return

    new_organizer = Organizer(name=name)
    await organizer_repository.create(new_organizer)

    await message.answer(f"‚úÖ –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä '{name}' —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
    await dialog_manager.switch_to(OrganizerSG.organizer_selection)


organizer_dialog = Dialog(
    Window(
        Format("–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–æ–π –∏–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤ –≤—ã:"),
        ScrollingGroup(
            Select(
                Format("{item[1]}"),
                items="organizers",
                item_id_getter=lambda item: str(item[0]),
                id="organizer_select",
                on_click=organizer_selected,
            ),
            id="organizers_scroll",
            width=1,
            height=4,
            when="has_organizers",
        ),
        Const("–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤.", when="!has_organizers"),
        Button(
            Const("‚ûï –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–≥–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞"),
            id="register_organizer",
            on_click=register_new_organizer,
        ),
        state=OrganizerSG.organizer_selection,
        getter=get_organizers_data,
    ),
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ –§–ò–û –Ω–æ–≤–æ–≥–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞:"),
        TextInput(
            id="organizer_name_input",
            on_success=organizer_name_input_handler,
        ),
        state=OrganizerSG.organizer_registration,
    ),
    Window(
        Format(
            "üéõÔ∏è **–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞**\n\nüë§ **–í—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä:** {organizer_name}\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
        ),
        Group(
            Row(
                Button(
                    Const("üìÖ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"),
                    id="events_management",
                    on_click=events_management_handler,
                ),
                Button(
                    Const("üìù –ö–æ–Ω—Ç–µ–Ω—Ç"),
                    id="content_management",
                    on_click=content_management_handler,
                ),
            ),
            Row(
                Button(
                    Const("ü©∏ –î–Ω–∏ –¥–æ–Ω–æ—Ä–∞"),
                    id="donor_days_management",
                    on_click=donor_days_management_handler,
                ),
                Button(
                    Const("üë• –î–∞–Ω–Ω—ã–µ –¥–æ–Ω–æ—Ä–æ–≤"),
                    id="donor_data_management",
                    on_click=donor_data_management_handler,
                ),
            ),
            Row(
                Button(
                    Const("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
                    id="statistics_management",
                    on_click=statistics_management_handler,
                ),
                Button(
                    Const("üí¨ –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏"),
                    id="communication_management",
                    on_click=communication_management_handler,
                ),
            ),
        ),
        Button(
            Const("üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞"),
            id="back_to_selection",
            on_click=back_to_organizer_selection,
        ),
        state=OrganizerSG.organizer_menu,
        getter=get_organizer_menu_data,
    ),
    Window(
        Const(
            "üìÖ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏**\n\n‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π\n‚Ä¢ "
            "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π\n‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º"
        ),
        Button(
            Const("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"),
            id="back_to_menu",
            on_click=lambda c, b, dm: dm.switch_to(OrganizerSG.organizer_menu),
        ),
        state=OrganizerSG.events_management,
    ),
    Window(
        Const(
            "üìù **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º**\n\n‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–Ω–æ—Ä—Å—Ç–≤–µ\n‚Ä¢ "
            "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤ –∏ –æ–ø–∏—Å–∞–Ω–∏–π\n‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ FAQ"
        ),
        Button(
            Const("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"),
            id="back_to_menu",
            on_click=lambda c, b, dm: dm.switch_to(OrganizerSG.organizer_menu),
        ),
        state=OrganizerSG.content_management,
    ),
    Window(
        Const(
            "ü©∏ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–Ω—è–º–∏ –¥–æ–Ω–æ—Ä–∞**\n\n‚Ä¢ –í–Ω–µ—Å–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—à–µ–¥—à–∏—Ö –¥–Ω—è—Ö –¥–æ–Ω–æ—Ä–∞\n‚Ä¢ "
            "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—É–¥—É—â–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π\n‚Ä¢ –û—Ç—á–µ—Ç—ã –ø–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã–º –¥–Ω—è–º"
        ),
        Button(
            Const("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"),
            id="back_to_menu",
            on_click=lambda c, b, dm: dm.switch_to(OrganizerSG.organizer_menu),
        ),
        state=OrganizerSG.donor_days_management,
    ),
    Window(
        Const(
            "üë• **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –¥–æ–Ω–æ—Ä–æ–≤**\n\n‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–æ–Ω–æ—Ä–æ–≤\n‚Ä¢ "
            "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–æ–Ω–æ—Ä–æ–≤\n‚Ä¢ –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è"
        ),
        Button(
            Const("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"),
            id="back_to_menu",
            on_click=lambda c, b, dm: dm.switch_to(OrganizerSG.organizer_menu),
        ),
        state=OrganizerSG.donor_data_management,
    ),
    Window(
        Const(
            "üìä **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π**\n\n‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –≤—ã–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ–Ω–æ—Ä–æ–≤\n‚Ä¢ "
            "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤\n‚Ä¢ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö"
        ),
        Button(
            Const("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"),
            id="back_to_menu",
            on_click=lambda c, b, dm: dm.switch_to(OrganizerSG.organizer_menu),
        ),
        state=OrganizerSG.statistics_management,
    ),
    Window(
        Const(
            "üí¨ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è–º–∏**\n\n‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –¥–æ–Ω–æ—Ä–æ–≤\n‚Ä¢ "
            "–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –≤ —á–∞—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏\n‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏"
        ),
        Button(
            Const("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"),
            id="back_to_menu",
            on_click=lambda c, b, dm: dm.switch_to(OrganizerSG.organizer_menu),
        ),
        state=OrganizerSG.communication_management,
    ),
)
